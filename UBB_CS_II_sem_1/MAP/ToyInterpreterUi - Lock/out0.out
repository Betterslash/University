

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->21 2-->22 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->Model.stmt.NoStmt@2eb2c300|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; Model.stmt.NoStmt@2eb2c300
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->21 2-->22 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->22 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v1)|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v1)|fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|wH(v2, (rH(v1) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1)))) ; print rH(v1) ; print rH(v1)
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->20 20 
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v1) + 1))|
out ->20 20 
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 20 
fileTable ->
originalProgram ->wH(v2, (rH(v1) + 1)) ; wH(v2, (rH(v1) + 1))
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->21 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1)))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1)) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork(wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x))|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork(
wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork(
wH(v2, (rH(v2) + 1)))|
out ->
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork(
fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)) ; fork(
fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)) ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)) ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork(
wH(v2, (rH(v2) + 1))) ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->1 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; 
fork[

fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; 
fork[

fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 9 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 6 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 7 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 8 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->21 2-->32 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v1) ; print rH(v2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->20 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; print rH(v1) ; print rH(v2)
heapTable ->1-->20 2-->31 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->20 30 
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->20 30 
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->20 30 
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 30 
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|Ref(int) v1 ; Ref(int) v2 ; new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v1 ; Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|Ref(int) v2|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v1, 20)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->}

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->Ref(int)@UnknownValue 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|new(v2, 30)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|newLock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)]|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|lock( x ) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|lock( x ) ; print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|fork[
wH(v2, (rH(v2) + 1))]|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) - 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->30 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->30 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 90 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->wH(v2, (rH(v2) + 1))
heapTable ->1-->20 2-->31 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v2, (rH(v2) + 1))|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) - 1))|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->20 2-->31 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|lock( x )|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 70 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 80 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->wH(v1, (rH(v1) + 1)) ; unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|wH(v1, (rH(v1) + 1))|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->19 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 60 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->
fileTable ->
originalProgram ->fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|lock( x )|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|print rH(v1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->print rH(v2) ; unlock(x)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|print rH(v2)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 32 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->unlock(x)|
out ->20 32 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }

Program 0 {
symTable ->x-->2 v1-->(int, 1) v2-->(int, 2) 
exeStack ->
out ->20 32 
fileTable ->
originalProgram ->Ref(int) v1 ; Ref(int) v2 ; new(v1, 20) ; new(v2, 30) ; newLock(x) ; fork[
fork[
lock( x ) ; wH(v1, (rH(v1) - 1)) ; unlock(x)] ; lock( x ) ; wH(v1, (rH(v1) + 1)) ; unlock(x)] ; fork[
fork[
wH(v2, (rH(v2) + 1))] ; wH(v2, (rH(v2) + 1)) ; unlock(x)] ; lock( x ) ; print rH(v1) ; print rH(v2) ; unlock(x)
heapTable ->1-->20 2-->32 }