

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->|
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->100 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
out ->10 9 200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->|
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->|
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->|
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|createSemaphore(cnt, rH(v1))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->1 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->1 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 5 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->10 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->
out ->10 9 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 1) ; createSemaphore(cnt, rH(v1)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->10 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) |
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->10 9 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->10 }