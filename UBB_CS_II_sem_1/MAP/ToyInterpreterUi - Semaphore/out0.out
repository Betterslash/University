

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->2 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->200 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->200 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 199 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->200 199 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 199 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->200 199 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->200 199 400 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 199 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->200 199 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->200 199 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 0 {
symTable ->
exeStack ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|Ref(int) v1 ; int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|Ref(int) v1|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|int cnt|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->Ref(int)@UnknownValue 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|new(v1, 2)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->}

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->int@UnknownValue v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|newSemaphore(cnt, rH(v1), 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt))|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|acquire(cnt) ; print (rH(v1) - 1)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->2 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->2 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->print rH(v1) ; release(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 6 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print (rH(v1) - 1)|
out ->20 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|acquire(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 0 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 
fileTable ->
originalProgram ->Ref(int) v1 ; int cnt ; new(v1, 2) ; newSemaphore(cnt, rH(v1), 1) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; print rH(v1) ; release(cnt)) ; 
fork(acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)) ; acquire(cnt) ; print (rH(v1) - 1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|wH(v1, (rH(v1) * 10))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->20 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|wH(v1, (rH(v1) * 2)) ; print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|wH(v1, (rH(v1) * 2))|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->200 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|print rH(v1)|
out ->20 19 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->release(cnt)|
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }

Program 7 {
symTable ->cnt-->1 v1-->(int, 1) 
exeStack ->
out ->20 19 400 
fileTable ->
originalProgram ->acquire(cnt) ; wH(v1, (rH(v1) * 10)) ; wH(v1, (rH(v1) * 2)) ; print rH(v1) ; release(cnt)
heapTable ->1-->400 }